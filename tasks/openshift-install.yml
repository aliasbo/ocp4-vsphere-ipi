---
- name: Run the installer
  command: openshift-install create cluster --dir=/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}
  async: "{{ 2 * 60 * 60 }}"
  poll: 0
  register: r_openshift_install

- name: Pause while the resources are created
  pause:
    minutes: 2

- name: Composing the name of bootstrap VM using InfraID
  set_fact:
    bootstrap_name: "{{ lookup('file','/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/metadata.json') | from_json | json_query('infraID') }}-bootstrap"

- name: Wait for the bootstrap VM {{ bootstrap_name }} to be created
  community.vmware.vmware_vm_info:
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    vm_type: vm
  register: vm_info
  until: vm_info.virtual_machines | to_json | from_json | json_query(query)
  vars:
    query: "[?guest_name=='{{ bootstrap_name }}']"

- name: Wait for the IP of the bootstrap VM {{ bootstrap_name }}
  community.vmware.vmware_guest_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ vcenter_datacenter }}"
    name: "{{ bootstrap_name }}"
  register: r_vm_guest
  until: r_vm_guest.instance.ipv4
  retries: 6
  delay: 30

- name: Set the bootstrap_ip to {{ r_vm_guest.instance.ipv4 }}
  set_fact:
    bootstrap_ip: "{{ r_vm_guest.instance.ipv4 }}"

#  The below tasks are intended to fix a bug related to
#- a NM dispatcher that updates the resolv.conf
#- to add localhost for self-resolution like api-int
#  The bug is fixed starting on v4.8
#- so these should be refactored or removed
- name: Fix resolv.conf in bootstrap
  shell: |
    ssh -tt -oIdentityFile=/home/{{ ansible_env.USER }}/.ssh/id_rsa_ocp -oStrictHostKeyChecking=off core@{{ bootstrap_ip }} '
    if ! /bin/grep "nameserver 127.0.0.1" /etc/resolv.conf >/dev/null
    then
      sudo sed -i "/^# Generated by/a nameserver 127.0.0.1" /etc/resolv.conf
    fi
    '
  args:
    executable: /bin/bash
  ignore_errors: true

- name: Fix nm_dispatcher in bootstrap
  shell: |
    ssh -tt -oIdentityFile=/home/{{ ansible_env.USER }}/.ssh/id_rsa_ocp core@{{ bootstrap_ip }} '
    sudo sed -i "/sed/s/by\.\*\$/by/" /etc/NetworkManager/dispatcher.d/30-local-dns-prepender
    '
  args:
    executable: /bin/bash
  ignore_errors: true

- name: For close inspection of the bootstrap process
  debug:
    msg: "SSH into {{ bootstrap_name }} then run > journalctl -b -f -u release-image.service -u bootkube.service"

- name: Wait for bootstrap-complete
  command: |
    openshift-install wait-for bootstrap-complete --dir=/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}
  async: "{{ 2 * 60 * 60 }}"
  poll: 15 

- name: Wait for install-complete
  command: |
    openshift-install wait-for install-complete --dir=/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}
  async: "{{ 2 * 60 * 60 }}"
  poll: 15 

- name: Gzip Install log
  archive:
    path: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/.openshift_install.log
    dest: /home/{{ ansible_env.USER }}/openshift/openshift_install.log.gz
    format: gz

- name: Make sure .kube directory exists in home directory
  file:
    state: directory
    path: /home/{{ ansible_env.USER }}/.kube
    owner: "{{ ansible_env.USER }}"
    mode: 0775

- name: Set up .kube/config
  copy:
    src: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/auth/kubeconfig
    dest: /home/{{ ansible_env.USER }}/.kube/config

- name: Create OpenShift Bash completion file
  become: true
  shell: oc completion bash >/etc/bash_completion.d/openshift
