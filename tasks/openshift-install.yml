---
- name: Check if openshift-install is already running
  command: pgrep -a -f 'openshift-install create cluster'
  register: r_pgrep
  ignore_errors: true
  changed_when: "'openshift-install create cluster' not in r_pgrep.stdout"

- name: Run the installer
  command: openshift-install create cluster --dir={{ openshift_cluster_installation_dir }}
  async: "{{ 2 * 60 * 60 }}"
  poll: 0
  register: r_openshift_install
  when: r_pgrep.changed

- name: Finding the name of the bootstrap VM using the InfraID
  set_fact:
    bootstrap_name: "{{ lookup('file','{{ openshift_cluster_installation_dir }}/metadata.json') | from_json | json_query('infraID') }}-bootstrap"

- name: Wait for the bootstrap VM {{ bootstrap_name }} to be created
  wait_for:
    path: "{{ openshift_cluster_installation_dir }}/.openshift_install.log"
    search_regex: 'modules.bootstrap.vsphere_virtual_machine.vm: Creation complete'

- name: Pause while the bootstrap VM resources are created
  pause:
    minutes: 1

- name: Get the IP of the bootstrap VM {{ bootstrap_name }}
  community.vmware.vmware_guest_info:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    datacenter: "{{ vcenter_datacenter }}"
    name: "{{ bootstrap_name }}"
  register: r_vm_guest
  until: r_vm_guest.instance.ipv4
  retries: 4
  delay: 30

- name: Set the bootstrap_ip to {{ r_vm_guest.instance.ipv4 }}
  set_fact:
    bootstrap_ip: "{{ r_vm_guest.instance.ipv4 }}"

#  The below tasks are intended to fix a bug related to
#- a NM dispatcher that updates the resolv.conf
#- to add localhost for self-resolution like api-int
#  The bug is fixed starting on v4.8
#- so these should be refactored or removed
- name: Fix resolv.conf in bootstrap
  shell: |
    ssh -tt -i {{ ssh_pri_key }} -oStrictHostKeyChecking=off core@{{ bootstrap_ip }} '
    if ! /bin/grep "nameserver 127.0.0.1" /etc/resolv.conf >/dev/null
    then
      sudo sed -i "/^# Generated by/a nameserver 127.0.0.1" /etc/resolv.conf
    fi
    '
  args:
    executable: /bin/bash
  ignore_errors: true

- name: Fix nm_dispatcher in bootstrap
  shell: |
    ssh -tt -i {{ ssh_pri_key }} core@{{ bootstrap_ip }} '
    sudo sed -i "/sed/s/by\.\*\$/by/" /etc/NetworkManager/dispatcher.d/30-local-dns-prepender
    '
  args:
    executable: /bin/bash
  ignore_errors: true

- name: For close inspection of the bootstrap process
  debug:
    msg: "ssh -i {{ ssh_pri_key }} core@{{ bootstrap_ip }} 'journalctl -b -f -u release-image.service -u bootkube.service'"

- name: Wait for bootstrap-complete
  command: |
    openshift-install wait-for bootstrap-complete --dir={{ openshift_cluster_installation_dir }}
  async: "{{ 2 * 60 * 60 }}"
  poll: 15 

- name: Run the following to watch the progress of the operators
  debug:
    msg: "oc --kubeconfig={{ openshift_cluster_installation_dir }}/auth/kubeconfig get co"

- name: Wait for install-complete
  command: |
    openshift-install wait-for install-complete --dir={{ openshift_cluster_installation_dir }}
  async: "{{ 2 * 60 * 60 }}"
  poll: 15 

- name: Gzip Install log
  archive:
    path: "{{ openshift_cluster_installation_dir }}/.openshift_install.log"
    dest: "{{ openshift_cluster_dir }}/openshift_install.log.gz"
    format: gz

- name: Make sure .kube directory exists in home directory
  file:
    state: directory
    path: "{{ ansible_env.HOME }}/.kube"
    owner: "{{ ansible_env.USER }}"
    mode: 0775

- name: Create OpenShift Bash completion file
  become: true
  shell: oc completion bash >/etc/bash_completion.d/openshift
