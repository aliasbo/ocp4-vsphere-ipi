---
- name: Installation and getting the logs
  tags:
  - run_installer
  block:
  - name: Run the installer
    command: openshift-install create cluster --dir=/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}
    async: "{{ 2 * 60 * 60 }}"
    poll: 0
    register: r_openshift_install

  - name: Pause for the bootstrap VM to be created
    pause:
      minutes: 2

  - name: Obtain InfraID of the cluster
    set_fact:
      infra_id: "{{ lookup('file','/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/metadata.json') | from_json | json_query('infraID') }}"

  - name: Get information about vCenter folders
    community.vmware.vmware_folder_info:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter: Datacenter
    delegate_to: localhost
    register: r_vcenter_folder_info

  - name: Set the vCenter folder of the cluster
    set_fact:
      vcenter_folder: "{{ r_vcenter_folder_info | to_json | from_json | json_query(query_str) | last }}"
    vars:
      query_str: "flat_folder_info[?contains(path,'vm') && contains(path,'{{ infra_id }}')].path"

  - name: Wait for VMware tools to become available in the bootstrap
    community.vmware.vmware_guest_tools_wait:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      name: "{{ infra_id }}-bootstrap"
      folder: "{{ vcenter_folder }}"
    register: r_vm_guest

  - name: Set the bootstrap_ip
    set_fact:
      bootstrap_ip: "{{ r_vm_guest.instance.ipv4 }}"

  - name: Fix resolv.conf in bootstrap
    shell: |
      ssh -tt -oIdentityFile=/home/ansible/.ssh/id_rsa_ocp core@{{ bootstrap_ip }} '
      if ! /bin/grep "nameserver 127.0.0.1" /etc/resolv.conf >/dev/null
      then
        sudo sed -i "/^# Generated by/a nameserver 127.0.0.1" /etc/resolv.conf
      fi
      '
    args:
      executable: /bin/bash
    ignore_errors: true

  - name: Fix nm_dispatcher in bootstrap
    shell: |
      ssh -tt -oIdentityFile=/home/ansible/.ssh/id_rsa_ocp core@{{ bootstrap_ip }} '
      sudo sed -i "/sed/s/by\.\*\$/by/" /etc/NetworkManager/dispatcher.d/30-local-dns-prepender
      '
    args:
      executable: /bin/bash
    ignore_errors: true

  - name: Check the status of the openshift-install
    async_status:
      jid: '{{ yum_sleeper.ansible_job_id }}'
    register: job_result
    until: job_result.finished
    retries: 3
    delay: 10

  rescue:
  - name: Run destroy to reset before retry
    become: false
    command: openshift-install destroy cluster --dir=/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}

  - name: Pause briefly for cloud provider cleanup to finish
    pause:
      minutes: 2

  - name: Restore install config from backup copy
    copy:
      remote_src: true
      src: /home/{{ ansible_env.USER }}/openshift/install-config.yaml.bak
      dest: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/install-config.yaml

  - name: Retry the installer
    command: openshift-install create cluster --dir=/home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}
    async: "{{ 2 * 60 * 60 }}"
    poll: 15
    register: r_openshift_install

  - name: View the log
    debug:
      msg: "Check the log at /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/.openshift_install.log"
    when: r_openshift_install is failed

  always:
  - name: Gzip Install log
    archive:
      path: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/.openshift_install.log
      dest: /home/{{ ansible_env.USER }}/openshift/openshift_install.log.gz
      format: gz

- name: Make sure .kube directory exists in home directory
  file:
    state: directory
    path: /home/{{ ansible_env.USER }}/.kube
    owner: "{{ ansible_env.USER }}"
    mode: 0775

- name: Set up .kube/config
  copy:
    src: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/auth/kubeconfig
    dest: /home/{{ ansible_env.USER }}/.kube/config

- name: Create OpenShift Bash completion file
  become: true
  shell: oc completion bash >/etc/bash_completion.d/openshift
