---
- name: Create .ssh directory
  file:
    path: /home/{{ ansible_env.USER }}/.ssh
    state: directory
    mode: 0700
    force: yes

- name: Generate SSH keys
  openssh_keypair:
    path: /home/{{ ansible_env.USER }}/.ssh/id_rsa_ocp
  register: r_sshkey

- name: Set ssh_pub_key
  set_fact:
    ssh_pub_key: "{{ r_sshkey.public_key }}"

- name: Confirm OpenShift Version in mirror
  set_fact:
    ocp_install_version: "{{ lookup('url', 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/' + openshift_version + '/release.txt', timeout='30') | regex_search('Version:\\s+([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') |last }}"

- name: Check if openshift-install is already present
  command: openshift-install version
  register: r_installer
  failed_when: r_installer.stdout is not search(ocp_install_version)
  ignore_errors: yes

- name: OpenShift Artifacts
  block:
  - name: Download the OpenShift artifacts version {{ openshift_version }}
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_version }}/{{ item }}
      dest: /home/{{ ansible_env.USER }}/openshift/
      timeout: 30
    loop:
    - "{{ openshift_install_linux }}"
    - "{{ openshift_client_linux }}"

  - name: Unpack the openshift-install
    unarchive:
      src: /home/{{ ansible_env.USER }}/openshift/{{ openshift_install_linux }}
      dest: /usr/local/bin/
      extra_opts:
      - "--add-file"
      - "openshift-install"
    become: yes

  - name: Unpack the openshift client
    unarchive:
      src: /home/{{ ansible_env.USER }}/openshift/{{ openshift_client_linux }}
      dest: /usr/local/bin/
      exclude:
      - README.md
    become: yes
  when: r_installer is failed

- name: Create the install-config file
  template:
    src: install-config.yaml.j2
    dest: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/install-config.yaml

- name: Backup the install-config file
  template:
    src: install-config.yaml.j2
    dest: /home/{{ ansible_env.USER }}/openshift/install-config.yaml.bak
