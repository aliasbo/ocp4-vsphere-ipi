---
- name: Create .ssh directory
  file:
    path: "{{ ansible_env.HOME }}/.ssh"
    state: directory
    mode: 0700
    force: yes

- name: Generate SSH keys
  openssh_keypair:
    path: "{{ ansible_env.HOME }}/.ssh/id_rsa_ocp_{{ cluster_name }}"
  register: r_sshkey

- name: Set ssh_pub_key
  set_fact:
    ssh_pub_key: "{{ r_sshkey.public_key }}"
    ssh_pri_key: "{{ r_sshkey.filename }}"

- name: Confirm the OpenShift release {{ openshift_version }}
  set_fact:
    openshift_version: "{{ lookup('url', 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/' + openshift_version + '/release.txt', validate_certs='no', timeout='30') | regex_search('Version:\\s+([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') |last }}"

- name: Check if oc client {{ openshift_version }} is already present
  command: oc version
  register: r_oc
  failed_when: r_oc.stdout is not search(openshift_version)
  ignore_errors: yes

- name: Install the oc client
  block:
  - name: Download the oc client {{ openshift_version }}
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_version }}/{{ openshift_client_linux }}
      dest: "{{ openshift_cluster_dir }}"
      timeout: 30
  - name: Unpack the oc client into /usr/local/bin
    unarchive:
      src: "{{ openshift_cluster_dir }}/{{ openshift_client_linux }}"
      dest: /usr/local/bin/
      exclude:
      - README.md
    become: yes
  when: r_oc is failed

- name: Check if openshift-install is already present
  command: openshift-install version
  register: r_installer
  failed_when: r_installer.stdout is not search(openshift_version)
  ignore_errors: yes

- name: Get the openshift-install in a connected installation
  block:
  - name: Download the openshift-install release {{ openshift_version }}
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_version }}/{{ openshift_install_linux }}
      dest: "{{ openshift_cluster_dir }}"
      timeout: 30
  - name: Unpack the openshift-install into /usr/local/bin
    unarchive:
      src: "{{ openshift_cluster_dir }}/{{ openshift_install_linux }}"
      dest: /usr/local/bin/
      extra_opts:
      - "--add-file"
      - "openshift-install"
    become: yes
  when: r_installer is failed and local_registry_sources is not defined

- name: Get the openshift-install in a disconnected installation
  block:
  - name: Extract the openshift-install release {{ openshift_version }}
    command: >
      oc adm release extract -a {{ pull_secret_file }}
      --command=openshift-install
      {{ local_registry_server }}/{{ local_registry_repository }}:{{ openshift_version }}-x86_64

  - name: Move the openshift-install to /usr/local/bin
    command: mv openshift-install /usr/local/bin
    become: yes
  when: r_installer is failed and local_registry_sources is defined

- name: Create the install-config file
  template:
    src: install-config.yaml.j2
    dest: "{{ openshift_cluster_installation_dir }}/install-config.yaml"

- name: Backup the install-config file
  template:
    src: install-config.yaml.j2
    dest: "{{ openshift_cluster_dir }}/install-config.yaml.bak"
