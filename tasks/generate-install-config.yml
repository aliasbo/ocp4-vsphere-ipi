---
- name: Create .ssh directory
  file:
    path: /home/{{ ansible_env.USER }}/.ssh
    state: directory
    mode: 0700
    force: yes

- name: Generate SSH keys
  openssh_keypair:
    path: /home/{{ ansible_env.USER }}/.ssh/id_rsa_ocp_{{ cluster_name }}
  register: r_sshkey

- name: Set ssh_pub_key
  set_fact:
    ssh_pub_key: "{{ r_sshkey.public_key }}"

<<<<<<< HEAD
- name: Pull Installation Artifacts
  block:
  - name: Confirm OpenShift Version in mirror is {{ openshift_version }}
    set_fact:
      ocp_install_version: "{{ lookup('url', 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/' + openshift_version + '/release.txt', timeout='30') | regex_search('Version:\\s+([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') |last }}"

  - name: Check if openshift-install {{ ocp_install_version }} is already present
    command: openshift-install version
    register: r_installer
    failed_when: r_installer.stdout is not search(ocp_install_version)
    ignore_errors: yes

  - name: OpenShift Artifacts
    block:
    - name: Download the OpenShift artifacts version {{ openshift_version }}
      get_url:
        url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_version }}/{{ item }}
        dest: /home/{{ ansible_env.USER }}/openshift/
        timeout: 30
      loop:
      - "{{ openshift_install_linux }}"
      - "{{ openshift_client_linux }}"

    - name: Unpack the openshift-install
      unarchive:
        src: /home/{{ ansible_env.USER }}/openshift/{{ openshift_install_linux }}
        dest: /usr/local/bin/
        extra_opts:
        - "--add-file"
        - "openshift-install"
      become: yes

    - name: Unpack the openshift client
      unarchive:
        src: /home/{{ ansible_env.USER }}/openshift/{{ openshift_client_linux }}
        dest: /usr/local/bin/
        exclude:
        - README.md
      become: yes
    when: r_installer is failed

- name: Extract Installation Artifacts
  block:
  - name: Create a temporary pull-secret file 
    tempfile:
      state: file
      suffix: ocp
    register: ocptemp_file

  - name: Copy pull-secret content to temporary file
    copy:
      content: "{{ vault_pull_secret }}"
      dest: "{{ ocptemp_file.path }}"

  - name: Extract the openshift-install binary from mirrored image
    command: >
      oc adm release extract -a {{ ocptemp_file.path }}
      --command=openshift-install
      {{ mirror_ip_port }}/{{ mirror_repo_name }}/{{ mirror_ocp_release }}

  - name: Move the openshift-install to /usr/local/bin
    command: mv openshift-install /usr/local/bin
    become: yes

  always:
  - name: Remove the temporary file
    file:
      path: "{{ ocptemp_file.path }}"
      state: absent
    when: ocptemp_file.path is defined
  when: mirror_sources is defined

=======
- name: Confirm the release of the OpenShift version {{ openshift_version }}
  set_fact:
    openshift_release: "{{ lookup('url', 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/' + openshift_release + '/release.txt', validate_certs='no', timeout='30') | regex_search('Version:\\s+([0-9]+\\.[0-9]+\\.[0-9]+)', '\\1') |last }}"

- name: Check if oc client {{ openshift_release }} is already present
  command: oc version
  register: r_oc
  failed_when: r_oc.stdout is not search(openshift_release)
  ignore_errors: yes

- name: Install the oc client
  block:
  - name: Download the oc client {{ openshift_release }}
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_release }}/{{ openshift_client_linux }}
      dest: /home/{{ ansible_env.USER }}/openshift/
      timeout: 30
  - name: Unpack the oc client into /usr/local/bin
    unarchive:
      src: /home/{{ ansible_env.USER }}/openshift/{{ openshift_client_linux }}
      dest: /usr/local/bin/
      exclude:
      - README.md
    become: yes
  when: r_oc is failed

- name: Check if openshift-install is already present
  command: openshift-install version
  register: r_installer
  failed_when: r_installer.stdout is not search(openshift_release)
  ignore_errors: yes

- name: Get the openshift-install in a connected installation
  block:
  - name: Download the openshift-install release {{ openshift_release }}
    get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_release }}/{{ openshift_install_linux }}
      dest: /home/{{ ansible_env.USER }}/openshift/
      timeout: 30
  - name: Unpack the openshift-install into /usr/local/bin
    unarchive:
      src: /home/{{ ansible_env.USER }}/openshift/{{ openshift_install_linux }}
      dest: /usr/local/bin/
      extra_opts:
      - "--add-file"
      - "openshift-install"
    become: yes
  when: r_installer is failed and local_registry_sources is not defined

- name: Get the openshift-install in a disconnected installation
  block:
  - name: Extract the openshift-install release {{ openshift_release }}
    command: >
      oc adm release extract -a {{ pull_secret_file }}
      --command=openshift-install
      {{ local_registry_server }}/{{ local_registry_repository }}:{{ openshift_release }}-x86_64

  - name: Move the openshift-install to /usr/local/bin
    command: mv openshift-install /usr/local/bin
    become: yes
  when: r_installer is failed and local_registry_sources is defined
>>>>>>> feature-disconnected

- name: Create the install-config file
  template:
    src: install-config.yaml.j2
    dest: /home/{{ ansible_env.USER }}/openshift/{{ cluster_name }}/install-config.yaml

- name: Backup the install-config file
  template:
    src: install-config.yaml.j2
    dest: /home/{{ ansible_env.USER }}/openshift/install-config.yaml.bak
